name: Merge PR with main branch

# 포크에서 PR이 오거나 업데이트될 때
on:
  pull_request_target:
    # 다음의 경우에만 실행
    types:
      - opened        # PR이 open 될 때
      - synchronize   # PR에 commit 추가시
    # PR의 base(refs/heads/…)가 다음 브랜치에 해당할 때만 실행
    branches:
      - main
    # 특정 디렉토리 내에서, 그리고 Markdown 파일과 이미지 파일에 대한 변경사항만 트리거
    paths:
      - '!.github/**'
      - '**.md'
      - '**.png'
      - '**.jpg'
      - '**.jpeg'
      - '**.gif'
      - '**.tiff'
      - '**.raw'
      - '**.psd'
      - '**.pdf'
      - '**.eps'
      - '**.ai'
      - '**.svg'

# 동시성 문제 대응
concurrency:
  # Base의 main 브랜치에 대한 PR인 경우에만 하나의 큐를 공유하는 그룹으로 묶음
  #   - PR 이벤트 에서는 github.event.pull_request.base.ref 가 “main” 이 되므로 그룹 이름이 main
  #   - 다른 이벤트(push, schedule-workflow 등)에서는 github.ref_name 이 “main” 이 되어 그룹 이름이 main
  group: ${{ github.event.pull_request.base.ref || github.ref_name }}
  # 진행 중인 run은 취소하지 않고 새로 들어온 run만 대기(pending)시킨다.
  # A PR의 run이 끝나는 시점에 B PR의 run이 자동으로 시작된다.
  cancel-in-progress: false # 기본값 false

# GitHub_Token에 write 권한 부여
permissions:
  contents: write

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:

      # Step 1. Base Repository의 main 브랜치를 체크아웃
      - name: Checkout the main branch
        uses: actions/checkout@v3
        with:
          ref: main                 # 체크아웃 대상 브랜ㅊ; : main
          fetch-depth: 0            # 깊이 0 → 전체 커밋 히스토리 가져오기
          persist-credentials: true # 토큰 유지 : 레포지토리를 체크아웃할 때 사용한 인증 토큰을 로컬 Git 설정(.git/config)에 그대로 남겨두므로써,
                                    # 이후 스텝에서도 별도 인증 없이 fetch, push 등의 git 명령 실행 가능

      # Step 2. PR 번호에 해당하는 merge-commit(refs/pull/.../merge)을 가져와서 로컬 브랜치(name = pr_merge)로 받아 놓기
      #   - refs/pull/<N>/merge 은 GitHub가 PR head 와 base 를 미리 합친(merge) 가상의 커밋
      #   - 참고) GitHub는 PR이 열려 있는 동안 내부적으로 PR의 head 브랜치와 base 브랜치를 미리 합친 상태의 커밋을 refs/pull/<number>/merge 라는 이름으로 계속 관리
      #   -      refs/pull/<number>/merge는 Step1이 선행돼야 함
      - name: Fetch PR merge commit
        run: |
          git fetch origin pull/${{ github.event.pull_request.number }}/merge:pr_merge

      # Step 3. merge-commit을 받아 놓은 pr_merge 브랜치를 main 브랜치로 푸시 (=자동 머지)
      - name: Push merge commit to main
        run: |
          git push origin pr_merge:main